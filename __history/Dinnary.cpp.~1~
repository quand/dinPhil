//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop
#include "Client.h"
#include "Barber.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
#define COUNT 5

TBarberForm *BarberForm;
//---------------------------------------------------------------------------
__fastcall TBarberForm::TBarberForm(TComponent* Owner)
	: TForm(Owner)
{
BarberForm->Add->Enabled = false; //кнопка добавления в очередь неактивная
for (int i = 0; i < COUNT; i++) {
	Fork[i] = CreateMutex(NULL, false, "fork"/*+i*/); // создаем мьютекс парикмахера
	}
BarberForm->Sleep->Visible = false;
BarberForm->Work->Visible = false;
}
//---------------------------------------------------------------------------
void __fastcall TBarberForm::N2Click(TObject *Sender)
{
ShowMessage ("В парикмахерской имеются 5 кресел для посетителей в зале ожидания и 1 кресло в зале стрижки.\nЕсли посетитель может занять место в зале ожидания он его занимает,\nесли мест нет, он уходит.\nЕсли в парикмахерской долгое время нет клиентов парикмахер засыпает.");
}
//---------------------------------------------------------------------------

void __fastcall TBarberForm::N3Click(TObject *Sender)
{
Close();
}
//---------------------------------------------------------------------------

void __fastcall TBarberForm::N1Click(TObject *Sender)
{   for (int i = 0; i < COUNT; i++) {
	STARTUPINFO si;PROCESS_INFORMATION pi;
		ZeroMemory(&si,sizeof(STARTUPINFO));
		si.cb=sizeof(STARTUPINFO);
		si.lpTitle = setTitle(i);
		CreateProcess(NULL, "Client1.exe", NULL, NULL, TRUE, 0, NULL, NULL, &si, &pi);
	}
Timer1->Interval = 15000;
Timer1->Enabled = true;
BarberForm->Events->Lines->Add("Парикмахерская открылась, парикмахер ждет клиентов");
BarberForm->N1->Enabled = false; //кнопка начала работы недоступна
BarberForm->Add->Enabled = true; //кнопка добавления в очередь активная
BarberForm->Sleep->Visible = false; //картинка спящего парикмахера скрыта
BarberForm->Work->Visible = true;  //картинка ножниц появилась
}
//---------------------------------------------------------------------------

void __fastcall TBarberForm::Timer1Timer(TObject *Sender)
{/*
if (sleep == true) { //если парикмахер не спит
//проверяем свободен ли парикмахер (нет ли клиентов)
DWORD barber_kr = WaitForSingleObject(Barber, 0);
//если клиентов нет парикмахер засыпает
if ((barber_kr == WAIT_OBJECT_0)) {
	BarberForm->Events->Lines->Add("Парикмахер уснул на своем рабочем месте");
	sleep = false;
	BarberForm->Sleep->Visible = true; //в окне появляется картинка спящего парикмахера
	BarberForm->Work->Visible = false;
}
}
//запускаем таймер снова, для непрерывной проверки на наличие клиентов
Timer1->Enabled = false;
Timer1->Enabled = true;*/
}
//---------------------------------------------------------------------------

void __fastcall TBarberForm::AddClick(TObject *Sender)
{
/*if (sleep == false) { //если парикмахер спит, то создаем клиента и будим парикмахера
	STARTUPINFO si;
	ZeroMemory(&si,sizeof(STARTUPINFO));
	PROCESS_INFORMATION pi;
	//создаем клиента
	CreateProcess(NULL, "Client1.exe", NULL, NULL, TRUE, 0, NULL, NULL, &si, &pi);
	BarberForm->Events->Lines->Add("Клиент разбудил парикмахера");
	BarberForm->Sleep->Visible = false;
	BarberForm->Work->Visible = true; //появляется картинка ножниц
	//будим парикмахера
	ReleaseMutex(Barber);
	sleep = true; */
	//} else { //если же парикмахер не спит, то просто создаем клиента

	//}
}
//---------------------------------------------------------------------------
char* setTitle(int i)
 {
	char* Name[COUNT]={"Platon","Socrat","Aristotle","Descartes","Kant"};
	return Name[i];
 }
