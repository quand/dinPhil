//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop
#include "Barber.h"
#include "Client.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm2 *Form2;
HANDLE left;
HANDLE right;

//---------------------------------------------------------------------------
__fastcall TForm2::TForm2(TComponent* Owner)
	: TForm(Owner)
{
	STARTUPINFO si;
	GetStartupInfo(&si);
	Form2->Text=si.lpTitle;
	id=getID(Form2->Text);
	Fork[id]= OpenMutex(MUTEX_ALL_ACCESS, true, "fork"/*+id*/);
	Fork[(id + 1) % 5]= OpenMutex(MUTEX_ALL_ACCESS, true, "fork"/*+((id + 1) % 5)*/);
}
//---------------------------------------------------------------------------
void __fastcall TForm2::N1Click(TObject *Sender)
{
//Fork[id] = OpenMutex(MUTEX_ALL_ACCESS, true, "fork");	//открываем мьютекс парикмахера
 //создаем семафоры, разделяющие 5 кресtk в зале ожидания
Phil = CreateSemaphore(NULL, 4, 4, "phil");
int countEat=0;
while (countEat<5){
	
Form2->Events->Lines->Add("Философ думает");
Sleep(random(7000) + 3000);
Form2->Events->Lines->Add("Философ хочет есть");
WaitForSingleObject(Phil, INFINITE); //попытка занять очередь
	/*if (dw == WAIT_TIMEOUT) { //попытка не удалась, зал ожидания пере-полнен
		Form2->Events->Lines->Add("Все места в зале ожидания заняты, клиент ушел");
		Sleep(3000);
		exit(0);		//клиент уходит
	} */
	Form2->Events->Lines->Add("Философ зашел в столовую");
	//если попытка занять очередь в зале ожидания удачная
	takeForks(id);

	//WaitForSingleObject(Fork[id], INFINITE); //дожидаемся своей очереди к парикмахеру
	ReleaseSemaphore(Phil, 1, NULL); //освобождаем место в оче-реди к парикмахеру
	Form2->Events->Lines->Add("Философ поел и пошел думать");
	countEat++;
}
	/*while (Work->Position != Work->Max)
	{ //идёт процесс стрижки
		Work->Position++;
		Sleep(50);
	} */
	//освобождаем парикмахера
	//ReleaseMutex(Fork[id]);
	/*Form2->Events->Lines->Add("Клиент постригся");
	Sleep(3000);*/
	//exit(0);		//клиент уходит
}
//---------------------------------------------------------------------------
 int getID(AnsiString name)
 {
	char* Name[5]={"Platon","Socrat","Aristotle","Descartes","Kant"};
	for (int i = 0; i < 5; i++) {
		if (name==Name[i]) {
			return i;
		}
	}
 }
 void takeForks(int id){
	left =OpenMutex(MUTEX_ALL_ACCESS, true, "fork"+id);
	right =OpenMutex(MUTEX_ALL_ACCESS, true, "fork"+((id + 1) % 5));

	WaitForSingleObject(left, INFINITE);
	WaitForSingleObject(right, INFINITE);
	Form2->Events->Lines->Add("Философ ест");

	Sleep(random(5000) + 5000);

	ReleaseMutex(right);
	ReleaseMutex(left);
 }
